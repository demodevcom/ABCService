<?php

namespace Mns\Service;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2015-05-04 at 15:03:59.
 */
class AbcdataHubTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var AbcdataHub
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new AbcdataHub;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * Generated from @assert (0, 0) == false.
     *
     * @covers Mns\Service\AbcdataHub::prepareItems
     */
    public function testPrepareItems()
    {
        $this->assertEquals(
            false
            , $this->object->prepareItems(0, 0)
        );
    }

    /**
     * Generated from @assert ('ok' ) == 'ACCEPTED'.
     *
     * @covers Mns\Service\AbcdataHub::generateResponseType
     */
    public function testGenerateResponseType()
    {
        $this->assertEquals(
            'ACCEPTED'
            , $this->object->generateResponseType('ok')
        );
    }

    /**
     * Generated from @assert ('Zamówienie odrzucone.' ) == 'REJECTED'.
     *
     * @covers Mns\Service\AbcdataHub::generateResponseType
     */
    public function testGenerateResponseType2()
    {
        $this->assertEquals(
            'REJECTED'
            , $this->object->generateResponseType('Zamówienie odrzucone.')
        );
    }

    /**
     * Generated from @assert ('cokolwiek innego' ) == 'ACCEPTED_WITH_EXCEPTIONS'.
     *
     * @covers Mns\Service\AbcdataHub::generateResponseType
     */
    public function testGenerateResponseType3()
    {
        $this->assertEquals(
            'ACCEPTED_WITH_EXCEPTIONS'
            , $this->object->generateResponseType('cokolwiek innego')
        );
    }

    /**
     * Generated from @assert ('ok','' ) == 'ACCEPTED'.
     *
     * @covers Mns\Service\AbcdataHub::regenerateResponseType
     */
    public function testRegenerateResponseType()
    {
        $this->assertEquals(
            'ACCEPTED'
            , $this->object->regenerateResponseType('ok', '')
        );
    }

    /**
     * Generated from @assert ('ok','ACCEPTED' ) == 'ACCEPTED'.
     *
     * @covers Mns\Service\AbcdataHub::regenerateResponseType
     */
    public function testRegenerateResponseType2()
    {
        $this->assertEquals(
            'ACCEPTED'
            , $this->object->regenerateResponseType('ok', 'ACCEPTED')
        );
    }

    /**
     * Generated from @assert ('ok','REJECTED' ) == 'REJECTED'.
     *
     * @covers Mns\Service\AbcdataHub::regenerateResponseType
     */
    public function testRegenerateResponseType3()
    {
        $this->assertEquals(
            'REJECTED'
            , $this->object->regenerateResponseType('ok', 'REJECTED')
        );
    }

    /**
     * Generated from @assert ('cokolwiek innego','REJECTED' ) == 'REJECTED'.
     *
     * @covers Mns\Service\AbcdataHub::regenerateResponseType
     */
    public function testRegenerateResponseType4()
    {
        $this->assertEquals(
            'REJECTED'
            , $this->object->regenerateResponseType('cokolwiek innego', 'REJECTED')
        );
    }

    /**
     * Generated from @assert ('Zamówienie odrzucone.','REJECTED' ) == 'REJECTED'.
     *
     * @covers Mns\Service\AbcdataHub::regenerateResponseType
     */
    public function testRegenerateResponseType5()
    {
        $this->assertEquals(
            'REJECTED'
            , $this->object->regenerateResponseType('Zamówienie odrzucone.', 'REJECTED')
        );
    }

    /**
     * Generated from @assert ('Zamówienie odrzucone.','ACCEPTED' ) == 'REJECTED'.
     *
     * @covers Mns\Service\AbcdataHub::regenerateResponseType
     */
    public function testRegenerateResponseType6()
    {
        $this->assertEquals(
            'REJECTED'
            , $this->object->regenerateResponseType('Zamówienie odrzucone.', 'ACCEPTED')
        );
    }

    /**
     * Generated from @assert ('Zamówienie odrzucone.','ACCEPTED_WITH_EXCEPTIONS' ) == 'REJECTED'.
     *
     * @covers Mns\Service\AbcdataHub::regenerateResponseType
     */
    public function testRegenerateResponseType7()
    {
        $this->assertEquals(
            'REJECTED'
            , $this->object->regenerateResponseType('Zamówienie odrzucone.', 'ACCEPTED_WITH_EXCEPTIONS')
        );
    }

    /**
     * Generated from @assert ('Zamówienie odrzucone.','' ) == 'REJECTED'.
     *
     * @covers Mns\Service\AbcdataHub::regenerateResponseType
     */
    public function testRegenerateResponseType8()
    {
        $this->assertEquals(
            'REJECTED'
            , $this->object->regenerateResponseType('Zamówienie odrzucone.', '')
        );
    }

    /**
     * Generated from @assert ('cokolwiek innego','' ) == 'ACCEPTED_WITH_EXCEPTIONS'.
     *
     * @covers Mns\Service\AbcdataHub::regenerateResponseType
     */
    public function testRegenerateResponseType9()
    {
        $this->assertEquals(
            'ACCEPTED_WITH_EXCEPTIONS'
            , $this->object->regenerateResponseType('cokolwiek innego', '')
        );
    }

    /**
     * Generated from @assert ('cokolwiek innego','ACCEPTED' ) == 'ACCEPTED_WITH_EXCEPTIONS'.
     *
     * @covers Mns\Service\AbcdataHub::regenerateResponseType
     */
    public function testRegenerateResponseType10()
    {
        $this->assertEquals(
            'ACCEPTED_WITH_EXCEPTIONS'
            , $this->object->regenerateResponseType('cokolwiek innego', 'ACCEPTED')
        );
    }

    /**
     * Generated from @assert ('cokolwiek innego','ACCEPTED_WITH_EXCEPTIONS' ) == 'ACCEPTED_WITH_EXCEPTIONS'.
     *
     * @covers Mns\Service\AbcdataHub::regenerateResponseType
     */
    public function testRegenerateResponseType11()
    {
        $this->assertEquals(
            'ACCEPTED_WITH_EXCEPTIONS'
            , $this->object->regenerateResponseType('cokolwiek innego', 'ACCEPTED_WITH_EXCEPTIONS')
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::prepareOrderResponse
     */
    public function testPrepareOrderResponse()
    {
        $orderId = -1;
        $abc_full_order = null;
        $komm = 'ok';
        $item = null;

        $response = $this->object->prepareOrderResponse($item, $orderId, $abc_full_order, $komm);
        $this->assertEquals(
            'ACCEPTED'
            , $response->ResponseType
        );

    }

    /**
     * Generated from @assert ("5901425361002", false) == "274628".
     *
     * @covers Mns\Service\AbcdataHub::getProductsByEans
     */
    public function testGetProductsByEans()
    {
        $product = $this->object->getProductsByEans(5901425361002, false);

        $productId = $product['product_id'];
        $expectedProductId = 274628;

        $this->assertEquals(
            $productId
            , $expectedProductId
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::__destruct
     * @todo   Implement test__destruct().
     */
    public function test__destruct()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::soapDebug
     * @todo   Implement testSoapDebug().
     */
    public function testSoapDebug()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::bug
     * @todo   Implement testBug().
     */
    public function testBug()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::SupplierItemDisable
     * @todo   Implement testSupplierItemDisable().
     */
    public function testSupplierItemDisable()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::getProductsSetsInABCDataBase
     * @todo   Implement testGetProductsSetsInABCDataBase().
     */
    public function testGetProductsSetsInABCDataBase()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::productInfoDebug
     * @todo   Implement testProductInfoDebug().
     */
    public function testProductInfoDebug()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::soapsDebug
     * @todo   Implement testSoapsDebug().
     */
    public function testSoapsDebug()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::sendInfoAboutProducts
     * @todo   Implement testSendInfoAboutProducts().
     */
    public function testSendInfoAboutProducts()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::getClientMessages
     * @todo   Implement testGetClientMessages().
     */
    public function testGetClientMessages()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::getClientOrders
     * @todo   Implement testGetClientOrders().
     */
    public function testGetClientOrders()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::getClientSupplier
     * @todo   Implement testGetClientSupplier().
     */
    public function testGetClientSupplier()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::_connectSoap
     * @todo   Implement test_connectSoap().
     */
    public function test_connectSoap()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::NewMessagesGet
     * @todo   Implement testNewMessagesGet().
     */
    public function testNewMessagesGet()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::getOrders
     * @todo   Implement testGetOrders().
     */
    public function testGetOrders()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::getProducts
     * @todo   Implement testGetProducts().
     */
    public function testGetProducts()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::getDeliveryDateForResponse
     * @todo   Implement testGetDeliveryDateForResponse().
     */
    public function testGetDeliveryDateForResponse()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::getSimpleDateForResponse
     * @todo   Implement testGetSimpleDateForResponse().
     */
    public function testGetSimpleDateForResponse()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::getPreparedResponse
     * @todo   Implement testGetPreparedResponse().
     */
    public function testGetPreparedResponse()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }


    /**
     * @covers Mns\Service\AbcdataHub::sendOrderResponses
     * @todo   Implement testSendOrderResponses().
     */
    public function testSendOrderResponses()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::createOrders
     * @todo   Implement testCreateOrders().
     */
    public function testCreateOrders()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::get_Orders
     * @todo   Implement testGet_Orders().
     */
    public function testGet_Orders()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::get_Products
     * @todo   Implement testGet_Products().
     */
    public function testGet_Products()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::getRawData4ABCData
     * @todo   Implement testGetRawData4ABCData().
     */
    public function testGetRawData4ABCData()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Mns\Service\AbcdataHub::setItemState
     * @todo   Implement testSetItemState().
     */
    public function testSetItemState()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

}
